<?php
/**
 * test_fix_verification.php - ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç academic_year_id ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
 */

session_start();
$_SESSION['user_id'] = 1;

require_once 'db_connect.php';
require_once 'admin/attendance_adjustment.php';

echo "<h2>üß™ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç Academic Year ID</h2>";
echo "<p><em>‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ UPDATE ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏´‡∏•‡∏±‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç</em></p>";

try {
    $conn = getDB();
    $conn->beginTransaction();
    
    // ‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏£‡∏¥‡∏á‡∏à‡∏≤‡∏Å‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    $test_student_query = "SELECT id, academic_year_id, name FROM students LIMIT 1";
    $test_stmt = $conn->query($test_student_query);
    $test_student = $test_stmt->fetch(PDO::FETCH_ASSOC);
    
    if (!$test_student) {
        echo "<p>‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö</p>";
        exit;
    }
    
    $student_id = $test_student['id'];
    $student_academic_year = $test_student['academic_year_id'];
    $student_name = $test_student['name'];
    
    echo "<h3>üìã ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏î‡∏™‡∏≠‡∏ö</h3>";
    echo "<p><strong>Student:</strong> $student_name (ID: $student_id)</p>";
    echo "<p><strong>Student's Academic Year:</strong> $student_academic_year</p>";
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏õ‡∏µ‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
    $active_year_query = "SELECT id FROM academic_years WHERE is_active = 1 LIMIT 1";
    $active_stmt = $conn->query($active_year_query);
    $active_year = $active_stmt->fetchColumn();
    
    echo "<p><strong>System Active Year:</strong> $active_year</p>";
    echo "<p><strong>Match:</strong> " . ($student_academic_year == $active_year ? '‚úÖ ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô' : '‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô') . "</p>";
    
    // ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏î‡∏™‡∏≠‡∏ö - ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• absent
    $test_dates = [
        date('Y-m-d', strtotime('-3 days')),
        date('Y-m-d', strtotime('-2 days')),
        date('Y-m-d', strtotime('-1 days'))
    ];
    
    // ‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡πà‡∏≤
    $cleanup = "DELETE FROM attendance WHERE student_id = ? AND date IN (?, ?, ?)";
    $cleanup_stmt = $conn->prepare($cleanup);
    $cleanup_stmt->execute([$student_id, $test_dates[0], $test_dates[1], $test_dates[2]]);
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• absent
    foreach ($test_dates as $date) {
        $insert = "INSERT INTO attendance (student_id, academic_year_id, date, attendance_status, check_method, created_at) VALUES (?, ?, ?, 'absent', 'System', NOW())";
        $insert_stmt = $conn->prepare($insert);
        $insert_stmt->execute([$student_id, $student_academic_year, $date]);
        echo "<p>‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• absent ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: $date</p>";
    }
    
    echo "<h3>üîß ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô adjustStudentAttendance</h3>";
    
    // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÅ‡∏•‡πâ‡∏ß
    $days_to_adjust = 2;
    
    echo "<p>üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô adjustStudentAttendance($student_id, $days_to_adjust)...</p>";
    
    // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÑ‡∏õ‡πÉ‡∏ä‡πâ transaction ‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏î‡∏™‡∏≠‡∏ö
    $conn->rollBack();
    $conn->beginTransaction();
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á
    foreach ($test_dates as $date) {
        $insert = "INSERT INTO attendance (student_id, academic_year_id, date, attendance_status, check_method, created_at) VALUES (?, ?, ?, 'absent', 'System', NOW())";
        $insert_stmt = $conn->prepare($insert);
        $insert_stmt->execute([$student_id, $student_academic_year, $date]);
    }
    
    // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÅ‡∏•‡πâ‡∏ß
    $result = adjustStudentAttendance($student_id, $days_to_adjust);
    
    if ($result['success']) {
        echo "<p style='color: green;'>‚úÖ <strong>‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!</strong></p>";
        echo "<p><strong>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÑ‡∏î‡πâ:</strong> {$result['days_adjusted']} ‡∏ß‡∏±‡∏ô</p>";
        echo "<p><strong>‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°:</strong> {$result['message']}</p>";
        
        if ($result['days_adjusted'] == $days_to_adjust) {
            echo "<p style='color: green; font-size: 16px;'><strong>üéØ ‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå!</strong></p>";
        } else {
            echo "<p style='color: orange;'><strong>‚ö†Ô∏è ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÑ‡∏î‡πâ‡∏ö‡∏≤‡∏á‡∏™‡πà‡∏ß‡∏ô</strong></p>";
        }
    } else {
        echo "<p style='color: red;'>‚ùå <strong>‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:</strong> {$result['message']}</p>";
    }
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
    echo "<h3>üìä ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå</h3>";
    $check_query = "SELECT date, attendance_status, remarks FROM attendance WHERE student_id = ? AND date IN (?, ?, ?) ORDER BY date";
    $check_stmt = $conn->prepare($check_query);
    $check_stmt->execute([$student_id, $test_dates[0], $test_dates[1], $test_dates[2]]);
    $results = $check_stmt->fetchAll(PDO::FETCH_ASSOC);
    
    echo "<table border='1' style='border-collapse: collapse;'>";
    echo "<tr><th>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà</th><th>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞</th><th>‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏</th></tr>";
    $present_count = 0;
    foreach ($results as $row) {
        $color = $row['attendance_status'] === 'present' ? 'green' : 'red';
        echo "<tr><td>{$row['date']}</td><td style='color: $color;'><strong>{$row['attendance_status']}</strong></td><td>{$row['remarks']}</td></tr>";
        if ($row['attendance_status'] === 'present') {
            $present_count++;
        }
    }
    echo "</table>";
    
    echo "<p><strong>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô present:</strong> $present_count ‡∏ß‡∏±‡∏ô</p>";
    
    if ($present_count == $days_to_adjust) {
        echo "<div style='background: #e8f5e8; padding: 15px; border-radius: 8px; margin-top: 20px;'>";
        echo "<h4 style='color: green;'>üéâ ‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ú‡πà‡∏≤‡∏ô!</h4>";
        echo "<p>‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç absent ‡πÄ‡∏õ‡πá‡∏ô present ‡πÑ‡∏î‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏•‡πâ‡∏ß</p>";
        echo "</div>";
    } else {
        echo "<div style='background: #ffebee; padding: 15px; border-radius: 8px; margin-top: 20px;'>";
        echo "<h4 style='color: red;'>‚ùå ‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÑ‡∏°‡πà‡∏ú‡πà‡∏≤‡∏ô</h4>";
        echo "<p>‡∏¢‡∏±‡∏á‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</p>";
        echo "</div>";
    }
    
    // Rollback
    $conn->rollBack();
    echo "<p><em>‚ÑπÔ∏è ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ñ‡∏π‡∏Å rollback ‡πÅ‡∏•‡πâ‡∏ß</em></p>";
    
} catch (Exception $e) {
    if (isset($conn)) {
        $conn->rollBack();
    }
    echo "<div style='background: #ffebee; color: #c62828; padding: 15px; border-radius: 5px;'>";
    echo "<h3>‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î</h3>";
    echo "<p>" . $e->getMessage() . "</p>";
    echo "</div>";
}
?>

<style>
    body { font-family: 'Sarabun', Arial, sans-serif; margin: 20px; background: #f5f5f5; }
    h2, h3, h4 { color: #2196f3; }
    table { margin: 10px 0; background: white; }
    th { background: #2196f3; color: white; padding: 8px; }
    td { padding: 8px; border: 1px solid #ddd; }
</style>
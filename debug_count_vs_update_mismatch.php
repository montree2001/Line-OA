<?php
/**
 * debug_count_vs_update_mismatch.php - ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ó‡∏≥‡πÑ‡∏° COUNT ‡∏´‡∏≤‡πÑ‡∏î‡πâ‡πÅ‡∏ï‡πà UPDATE ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ
 */

session_start();
$_SESSION['user_id'] = 1;

require_once 'db_connect.php';

echo "<h2>üîç Debug: COUNT vs UPDATE Mismatch</h2>";
echo "<p><em>‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ó‡∏≥‡πÑ‡∏°‡∏ô‡∏±‡∏ö absent ‡πÑ‡∏î‡πâ 21 ‡∏ß‡∏±‡∏ô ‡πÅ‡∏ï‡πà UPDATE ‡πÑ‡∏î‡πâ 0 ‡∏ß‡∏±‡∏ô</em></p>";

// ‡∏£‡∏±‡∏ö student_id ‡∏à‡∏≤‡∏Å URL
$student_id = $_GET['student_id'] ?? 1; // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô ID ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏à‡∏£‡∏¥‡∏á
$days_to_adjust = 2;

try {
    $conn = getDB();
    
    echo "<h3>üìã ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ó‡∏î‡∏™‡∏≠‡∏ö</h3>";
    echo "<p><strong>Student ID:</strong> $student_id</p>";
    
    // === ‡∏Ç‡∏±‡πâ‡∏ô‡∏ó‡∏µ‡πà 1: ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Academic Year ===
    echo "<h3>üìö ‡∏Ç‡∏±‡πâ‡∏ô‡∏ó‡∏µ‡πà 1: ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Academic Year</h3>";
    
    $academic_year_query = "SELECT * FROM academic_years WHERE is_active = 1 LIMIT 1";
    $stmt = $conn->query($academic_year_query);
    $academic_year = $stmt->fetch(PDO::FETCH_ASSOC);
    
    if ($academic_year) {
        echo "<table border='1' style='border-collapse: collapse;'>";
        echo "<tr><th>Column</th><th>Value</th></tr>";
        foreach ($academic_year as $key => $value) {
            echo "<tr><td><strong>$key</strong></td><td>$value</td></tr>";
        }
        echo "</table>";
        
        // ‡∏´‡∏≤ academic_year_id
        $academic_year_id = null;
        foreach (['academic_year_id', 'id', 'year_id'] as $possible_column) {
            if (isset($academic_year[$possible_column])) {
                $academic_year_id = $academic_year[$possible_column];
                echo "<p>‚úÖ <strong>‡πÉ‡∏ä‡πâ Academic Year ID:</strong> $academic_year_id (‡∏à‡∏≤‡∏Å‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå: $possible_column)</p>";
                break;
            }
        }
        
        if (!$academic_year_id) {
            echo "<p>‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö academic_year_id ‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°</p>";
            exit;
        }
    } else {
        echo "<p>‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏õ‡∏µ‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏ó‡∏µ‡πà active</p>";
        exit;
    }
    
    // === ‡∏Ç‡∏±‡πâ‡∏ô‡∏ó‡∏µ‡πà 2: ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Student ===
    echo "<h3>üë§ ‡∏Ç‡∏±‡πâ‡∏ô‡∏ó‡∏µ‡πà 2: ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Student</h3>";
    
    $student_query = "SELECT * FROM students WHERE student_id = ? LIMIT 1";
    $stmt = $conn->prepare($student_query);
    $stmt->execute([$student_id]);
    $student = $stmt->fetch(PDO::FETCH_ASSOC);
    
    if ($student) {
        echo "<table border='1' style='border-collapse: collapse;'>";
        echo "<tr><th>Column</th><th>Value</th></tr>";
        foreach ($student as $key => $value) {
            echo "<tr><td><strong>$key</strong></td><td>" . ($value ?? 'NULL') . "</td></tr>";
        }
        echo "</table>";
        
        // ‡∏´‡∏≤ academic_year_id ‡∏Ç‡∏≠‡∏á student
        $student_academic_year_id = null;
        foreach (['academic_year_id', 'year_id', 'class_year'] as $possible_column) {
            if (isset($student[$possible_column])) {
                $student_academic_year_id = $student[$possible_column];
                echo "<p>‚úÖ <strong>Student's Academic Year ID:</strong> $student_academic_year_id (‡∏à‡∏≤‡∏Å‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå: $possible_column)</p>";
                break;
            }
        }
        
        // ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÉ‡∏ä‡πâ academic_year_id ‡∏Ç‡∏≠‡∏á student ‡∏´‡∏≤‡∏Å‡∏°‡∏µ
        $final_academic_year_id = $student_academic_year_id ?: $academic_year_id;
        echo "<p>üéØ <strong>Final Academic Year ID ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ:</strong> $final_academic_year_id</p>";
        
        if ($student_academic_year_id != $academic_year_id) {
            echo "<p style='color: orange;'>‚ö†Ô∏è <strong>Warning:</strong> Student's academic year ($student_academic_year_id) ‚â† System active year ($academic_year_id)</p>";
        }
    } else {
        echo "<p>‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• student</p>";
        exit;
    }
    
    // === ‡∏Ç‡∏±‡πâ‡∏ô‡∏ó‡∏µ‡πà 3: ‡∏ó‡∏î‡∏™‡∏≠‡∏ö COUNT Query ===
    echo "<h3>üìä ‡∏Ç‡∏±‡πâ‡∏ô‡∏ó‡∏µ‡πà 3: ‡∏ó‡∏î‡∏™‡∏≠‡∏ö COUNT Query</h3>";
    
    $count_query = "
        SELECT COUNT(*) as total_absent_days
        FROM attendance 
        WHERE student_id = ? 
          AND academic_year_id = ? 
          AND attendance_status = 'absent'
    ";
    
    echo "<p><strong>COUNT Query:</strong></p>";
    echo "<pre>$count_query</pre>";
    echo "<p><strong>Parameters:</strong> student_id=$student_id, academic_year_id=$final_academic_year_id</p>";
    
    $count_stmt = $conn->prepare($count_query);
    $count_stmt->execute([$student_id, $final_academic_year_id]);
    $total_absent = $count_stmt->fetchColumn();
    
    echo "<p><strong>‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå COUNT:</strong> $total_absent ‡∏ß‡∏±‡∏ô</p>";
    
    // === ‡∏Ç‡∏±‡πâ‡∏ô‡∏ó‡∏µ‡πà 4: ‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏£‡∏¥‡∏á‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á ===
    echo "<h3>üìã ‡∏Ç‡∏±‡πâ‡∏ô‡∏ó‡∏µ‡πà 4: ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏£‡∏¥‡∏á‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á attendance</h3>";
    
    $data_query = "
        SELECT date, attendance_status, academic_year_id, student_id
        FROM attendance 
        WHERE student_id = ?
        ORDER BY date DESC
        LIMIT 10
    ";
    
    $data_stmt = $conn->prepare($data_query);
    $data_stmt->execute([$student_id]);
    $attendance_data = $data_stmt->fetchAll(PDO::FETCH_ASSOC);
    
    if (count($attendance_data) > 0) {
        echo "<table border='1' style='border-collapse: collapse;'>";
        echo "<tr><th>Date</th><th>Status</th><th>Academic Year ID</th><th>Student ID</th><th>Match?</th></tr>";
        
        $matching_absent = 0;
        foreach ($attendance_data as $row) {
            $status_color = $row['attendance_status'] === 'absent' ? 'red' : 'green';
            $year_match = $row['academic_year_id'] == $final_academic_year_id ? '‚úÖ' : '‚ùå';
            $is_absent_and_match = ($row['attendance_status'] === 'absent' && $row['academic_year_id'] == $final_academic_year_id);
            
            if ($is_absent_and_match) {
                $matching_absent++;
            }
            
            echo "<tr>";
            echo "<td>{$row['date']}</td>";
            echo "<td style='color: $status_color;'><strong>{$row['attendance_status']}</strong></td>";
            echo "<td>{$row['academic_year_id']}</td>";
            echo "<td>{$row['student_id']}</td>";
            echo "<td>" . ($is_absent_and_match ? '‚úÖ UPDATE ‡πÑ‡∏î‡πâ' : '‚ùå') . "</td>";
            echo "</tr>";
        }
        echo "</table>";
        
        echo "<p><strong>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç UPDATE ‡πÉ‡∏ô 10 ‡πÅ‡∏ñ‡∏ß:</strong> $matching_absent ‡πÅ‡∏ñ‡∏ß</p>";
    }
    
    // === ‡∏Ç‡∏±‡πâ‡∏ô‡∏ó‡∏µ‡πà 5: ‡∏ó‡∏î‡∏™‡∏≠‡∏ö UPDATE Query ===
    echo "<h3>üîÑ ‡∏Ç‡∏±‡πâ‡∏ô‡∏ó‡∏µ‡πà 5: ‡∏ó‡∏î‡∏™‡∏≠‡∏ö UPDATE Query</h3>";
    
    // ‡∏´‡∏≤‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏∞ update
    $select_days_query = "
        SELECT date 
        FROM attendance 
        WHERE student_id = ? 
          AND academic_year_id = ? 
          AND attendance_status = 'absent'
        ORDER BY date DESC
        LIMIT ?
    ";
    
    $select_stmt = $conn->prepare($select_days_query);
    $select_stmt->execute([$student_id, $final_academic_year_id, $days_to_adjust]);
    $days_to_update = $select_stmt->fetchAll(PDO::FETCH_COLUMN);
    
    echo "<p><strong>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏∞ UPDATE:</strong> " . implode(', ', $days_to_update) . "</p>";
    
    $conn->beginTransaction(); // ‡πÄ‡∏£‡∏¥‡πà‡∏° transaction ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏î‡∏™‡∏≠‡∏ö
    
    $updated_count = 0;
    foreach ($days_to_update as $date) {
        echo "<hr>";
        echo "<h4>üìÖ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö UPDATE ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: $date</h4>";
        
        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡πà‡∏≠‡∏ô UPDATE
        $check_before = "SELECT attendance_status, academic_year_id FROM attendance WHERE student_id = ? AND academic_year_id = ? AND date = ?";
        $check_stmt = $conn->prepare($check_before);
        $check_stmt->execute([$student_id, $final_academic_year_id, $date]);
        $before_data = $check_stmt->fetch(PDO::FETCH_ASSOC);
        
        if ($before_data) {
            echo "<p><strong>‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡πà‡∏≠‡∏ô UPDATE:</strong> Status = {$before_data['attendance_status']}, Academic Year = {$before_data['academic_year_id']}</p>";
            
            if ($before_data['attendance_status'] === 'absent') {
                // ‡∏ó‡∏≥ UPDATE
                $update_query = "
                    UPDATE attendance 
                    SET attendance_status = 'present', 
                        check_method = 'Manual Adjustment Test', 
                        updated_at = NOW()
                    WHERE student_id = ? AND academic_year_id = ? AND date = ? AND attendance_status = 'absent'
                ";
                
                $update_stmt = $conn->prepare($update_query);
                $result = $update_stmt->execute([$student_id, $final_academic_year_id, $date]);
                $rows_affected = $update_stmt->rowCount();
                
                echo "<p><strong>UPDATE Result:</strong> " . ($result ? 'SUCCESS' : 'FAILED') . "</p>";
                echo "<p><strong>Rows Affected:</strong> $rows_affected</p>";
                
                if ($rows_affected > 0) {
                    $updated_count++;
                    echo "<p style='color: green;'>‚úÖ UPDATE ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!</p>";
                } else {
                    echo "<p style='color: red;'>‚ùå UPDATE ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß - ‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÅ‡∏ñ‡∏ß‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô</p>";
                }
            } else {
                echo "<p style='color: orange;'>‚ö†Ô∏è ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà absent - ‡∏Ç‡πâ‡∏≤‡∏°</p>";
            }
        } else {
            echo "<p style='color: red;'>‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç</p>";
        }
    }
    
    $conn->rollBack(); // ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏î‡∏™‡∏≠‡∏ö
    
    // === ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏• ===
    echo "<hr>";
    echo "<h3>üìä ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•</h3>";
    echo "<div style='background: #e3f2fd; padding: 15px; border-radius: 8px;'>";
    echo "<p><strong>COUNT Query ‡πÑ‡∏î‡πâ:</strong> $total_absent ‡∏ß‡∏±‡∏ô</p>";
    echo "<p><strong>UPDATE ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:</strong> $updated_count ‡∏ß‡∏±‡∏ô</p>";
    echo "<p><strong>Academic Year ID ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ:</strong> $final_academic_year_id</p>";
    
    if ($updated_count == $days_to_adjust) {
        echo "<p style='color: green;'><strong>üéØ ‡∏£‡∏∞‡∏ö‡∏ö‡∏Ñ‡∏ß‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á!</strong></p>";
    } elseif ($updated_count == 0 && $total_absent > 0) {
        echo "<p style='color: red;'><strong>‚ùå ‡∏õ‡∏±‡∏ç‡∏´‡∏≤: ‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• absent ‡πÅ‡∏ï‡πà UPDATE ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ</strong></p>";
        echo "<p><strong>‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏õ‡πÑ‡∏î‡πâ:</strong></p>";
        echo "<ul>";
        echo "<li>Academic Year ID ‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô</li>";
        echo "<li>Student ID ‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á attendance ‡∏ï‡πà‡∏≤‡∏á‡∏à‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏°‡∏≤</li>";
        echo "<li>Attendance Status ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà 'absent' ‡πÅ‡∏ï‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡πà‡∏≤‡∏≠‡∏∑‡πà‡∏ô</li>";
        echo "</ul>";
    }
    echo "</div>";
    
} catch (Exception $e) {
    if (isset($conn)) {
        $conn->rollBack();
    }
    echo "<div style='background: #ffebee; color: #c62828; padding: 15px; border-radius: 5px;'>";
    echo "<h3>‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î</h3>";
    echo "<p>" . $e->getMessage() . "</p>";
    echo "</div>";
}
?>

<style>
    body { font-family: 'Sarabun', Arial, sans-serif; margin: 20px; background: #f5f5f5; }
    h2, h3, h4 { color: #2196f3; }
    table { margin: 10px 0; background: white; }
    th { background: #2196f3; color: white; padding: 8px; }
    td { padding: 8px; border: 1px solid #ddd; }
    hr { margin: 20px 0; border: 1px solid #e0e0e0; }
    pre { background: #f5f5f5; padding: 10px; border-radius: 4px; }
</style>
<?php
/**
 * test_insert_attendance.php - ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£ INSERT ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡πÅ‡∏ñ‡∏ß‡∏¢‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á
 */

session_start();
$_SESSION['user_id'] = 1; // ‡∏à‡∏≥‡∏•‡∏≠‡∏á user_id ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö

require_once 'db_connect.php';

echo "<h2>üß™ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£ INSERT ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡πÅ‡∏ñ‡∏ß‡∏¢‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á</h2>";

try {
    $conn = getDB();
    
    // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏î‡∏™‡∏≠‡∏ö
    $test_student_id = 1;
    $test_academic_year_id = 1;
    $test_dates = [
        date('Y-m-d', strtotime('-5 days')),
        date('Y-m-d', strtotime('-4 days')),
        date('Y-m-d', strtotime('-3 days')),
    ];
    
    echo "<h3>üìã ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏î‡∏™‡∏≠‡∏ö</h3>";
    echo "<p><strong>Student ID:</strong> $test_student_id</p>";
    echo "<p><strong>Academic Year ID:</strong> $test_academic_year_id</p>";
    echo "<p><strong>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏ó‡∏î‡∏™‡∏≠‡∏ö:</strong> " . implode(', ', $test_dates) . "</p>";
    
    echo "<h3>üîÑ ‡∏Å‡∏£‡∏∞‡∏ö‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö</h3>";
    
    $conn->beginTransaction();
    
    $success_count = 0;
    $error_count = 0;
    
    foreach ($test_dates as $date) {
        echo "<hr>";
        echo "<h4>üìÖ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: $date</h4>";
        
        // 1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        $check_query = "SELECT COUNT(*) FROM attendance WHERE student_id = ? AND academic_year_id = ? AND date = ?";
        $check_stmt = $conn->prepare($check_query);
        $check_stmt->execute([$test_student_id, $test_academic_year_id, $date]);
        $exists = $check_stmt->fetchColumn() > 0;
        
        if ($exists) {
            echo "<p>‚ö†Ô∏è ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß - ‡∏Ç‡πâ‡∏≤‡∏°‡πÑ‡∏õ</p>";
            continue;
        }
        
        // 2. ‡∏•‡∏≠‡∏á‡πÉ‡∏™‡πà‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
        try {
            $insert_query = "
                INSERT INTO attendance 
                (student_id, academic_year_id, date, attendance_status, check_method, check_time, remarks, created_at) 
                VALUES (?, ?, ?, 'present', 'Manual Test', '08:00:00', '‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏£‡∏∞‡∏ö‡∏ö‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏¢‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á', NOW())
            ";
            
            $insert_stmt = $conn->prepare($insert_query);
            $result = $insert_stmt->execute([$test_student_id, $test_academic_year_id, $date]);
            
            if ($result) {
                echo "<p>‚úÖ INSERT ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!</p>";
                $success_count++;
                
                // 3. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏¥‡πà‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°
                $verify_query = "SELECT * FROM attendance WHERE student_id = ? AND academic_year_id = ? AND date = ? ORDER BY created_at DESC LIMIT 1";
                $verify_stmt = $conn->prepare($verify_query);
                $verify_stmt->execute([$test_student_id, $test_academic_year_id, $date]);
                $verify_result = $verify_stmt->fetch(PDO::FETCH_ASSOC);
                
                if ($verify_result) {
                    echo "<p>üìã ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏¥‡πà‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°:</p>";
                    echo "<table border='1' style='border-collapse: collapse;'>";
                    foreach ($verify_result as $key => $value) {
                        echo "<tr><td><strong>$key</strong></td><td>" . ($value ?? 'NULL') . "</td></tr>";
                    }
                    echo "</table>";
                } else {
                    echo "<p>‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏¥‡πà‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°!</p>";
                    $error_count++;
                }
                
                // 4. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏•‡∏á‡πÉ‡∏ô attendance_records ‡∏î‡πâ‡∏ß‡∏¢
                try {
                    $insert_records_query = "
                        INSERT INTO attendance_records 
                        (student_id, attendance_date, status, created_at) 
                        VALUES (?, ?, 'present', NOW())
                        ON DUPLICATE KEY UPDATE status = 'present', updated_at = NOW()
                    ";
                    
                    $records_stmt = $conn->prepare($insert_records_query);
                    $records_result = $records_stmt->execute([$test_student_id, $date]);
                    
                    if ($records_result) {
                        echo "<p>‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏•‡∏á‡πÉ‡∏ô attendance_records ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡∏î‡πâ‡∏ß‡∏¢</p>";
                    } else {
                        echo "<p>‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏•‡∏á‡πÉ‡∏ô attendance_records</p>";
                    }
                } catch (Exception $e) {
                    echo "<p>‚ö†Ô∏è ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô attendance_records: " . $e->getMessage() . "</p>";
                }
                
            } else {
                echo "<p>‚ùå INSERT ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à</p>";
                echo "<p>Error Info: " . print_r($insert_stmt->errorInfo(), true) . "</p>";
                $error_count++;
            }
            
        } catch (Exception $e) {
            echo "<p>‚ùå ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: " . $e->getMessage() . "</p>";
            $error_count++;
        }
    }
    
    // ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•
    echo "<hr>";
    echo "<h3>üìä ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö</h3>";
    echo "<div style='background: #e3f2fd; padding: 15px; border-radius: 5px;'>";
    echo "<p>‚úÖ <strong>‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:</strong> $success_count ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</p>";
    echo "<p>‚ùå <strong>‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:</strong> $error_count ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</p>";
    echo "<p>üìä <strong>‡∏£‡∏ß‡∏°:</strong> " . count($test_dates) . " ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</p>";
    echo "</div>";
    
    if ($success_count > 0) {
        echo "<h3>üìã ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÅ‡∏•‡πâ‡∏ß</h3>";
        
        $final_check = "SELECT * FROM attendance WHERE student_id = ? AND academic_year_id = ? AND date IN ('" . implode("','", $test_dates) . "') ORDER BY date DESC";
        $final_stmt = $conn->prepare($final_check);
        $final_stmt->execute([$test_student_id, $test_academic_year_id]);
        $final_results = $final_stmt->fetchAll(PDO::FETCH_ASSOC);
        
        if (count($final_results) > 0) {
            echo "<table border='1' style='border-collapse: collapse; width: 100%; font-size: 12px;'>";
            echo "<tr>";
            foreach (array_keys($final_results[0]) as $key) {
                echo "<th>$key</th>";
            }
            echo "</tr>";
            
            foreach ($final_results as $row) {
                echo "<tr>";
                foreach ($row as $value) {
                    echo "<td>" . ($value ?? 'NULL') . "</td>";
                }
                echo "</tr>";
            }
            echo "</table>";
        }
    }
    
    // Rollback ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏´‡∏•‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠
    $conn->rollBack();
    echo "<p><em>‚ÑπÔ∏è ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏: ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ñ‡∏π‡∏Å rollback ‡πÅ‡∏•‡πâ‡∏ß (‡πÑ‡∏°‡πà‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏£‡∏¥‡∏á)</em></p>";
    
} catch (Exception $e) {
    if (isset($conn)) {
        $conn->rollBack();
    }
    echo "<div style='background: #ffebee; color: #c62828; padding: 15px; border-radius: 5px;'>";
    echo "<h3>‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î</h3>";
    echo "<p>" . $e->getMessage() . "</p>";
    echo "</div>";
}
?>

<style>
    body { 
        font-family: 'Sarabun', Arial, sans-serif; 
        margin: 20px; 
        background: #f5f5f5; 
        color: #333;
    }
    h2, h3, h4 { color: #2196f3; }
    table { margin: 10px 0; background: white; }
    th { background: #2196f3; color: white; padding: 8px; }
    td { padding: 8px; border: 1px solid #ddd; }
    hr { margin: 20px 0; border: 1px solid #e0e0e0; }
</style>
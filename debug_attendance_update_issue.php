<?php
/**
 * debug_attendance_update_issue.php - ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏õ‡∏±‡∏ç‡∏´‡∏≤ UPDATE ‡πÑ‡∏î‡πâ 0 ‡πÅ‡∏ñ‡∏ß
 */

require_once 'db_connect.php';

echo "<h2>üîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏õ‡∏±‡∏ç‡∏´‡∏≤ UPDATE ‡πÑ‡∏î‡πâ 0 ‡πÅ‡∏ñ‡∏ß</h2>";
echo "<p><em>‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ó‡∏≥‡πÑ‡∏° UPDATE attendance ‡∏à‡∏≤‡∏Å absent ‡πÄ‡∏õ‡πá‡∏ô present ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ</em></p>";

try {
    $conn = getDB();
    
    // ‡∏£‡∏±‡∏ö‡∏û‡∏≤‡∏£‡∏≤‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏à‡∏≤‡∏Å URL ‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
    $test_student_id = $_GET['student_id'] ?? 1; // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ï‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
    $test_academic_year_id = $_GET['academic_year_id'] ?? 1;
    
    echo "<h3>üìã ‡∏û‡∏≤‡∏£‡∏≤‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö</h3>";
    echo "<p><strong>Student ID:</strong> $test_student_id</p>";
    echo "<p><strong>Academic Year ID:</strong> $test_academic_year_id</p>";
    echo "<p><em>‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÑ‡∏î‡πâ‡∏ú‡πà‡∏≤‡∏ô URL: ?student_id=X&academic_year_id=Y</em></p>";
    
    // === 1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô ===
    echo "<h3>üë§ 1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô</h3>";
    $student_query = "SELECT student_id, student_code, first_name, last_name FROM students WHERE student_id = ?";
    $student_stmt = $conn->prepare($student_query);
    $student_stmt->execute([$test_student_id]);
    $student = $student_stmt->fetch(PDO::FETCH_ASSOC);
    
    if ($student) {
        echo "<p>‚úÖ ‡∏û‡∏ö‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô: {$student['student_code']} - {$student['first_name']} {$student['last_name']}</p>";
    } else {
        echo "<p>‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô ID: $test_student_id</p>";
        exit;
    }
    
    // === 2. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• academic year ===
    echo "<h3>üìÖ 2. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Academic Year</h3>";
    $academic_query = "SELECT * FROM academic_years WHERE academic_year_id = ?";
    $academic_stmt = $conn->prepare($academic_query);
    $academic_stmt->execute([$test_academic_year_id]);
    $academic = $academic_stmt->fetch(PDO::FETCH_ASSOC);
    
    if ($academic) {
        echo "<table border='1' style='border-collapse: collapse;'>";
        echo "<tr><th>Field</th><th>Value</th></tr>";
        foreach ($academic as $key => $value) {
            echo "<tr><td>$key</td><td>$value</td></tr>";
        }
        echo "</table>";
    } else {
        echo "<p>‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö Academic Year ID: $test_academic_year_id</p>";
        // ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏°‡∏µ
        $all_academic = $conn->query("SELECT academic_year_id, year, semester, is_active FROM academic_years");
        echo "<p><strong>Academic Years ‡∏ó‡∏µ‡πà‡∏°‡∏µ:</strong></p>";
        echo "<table border='1' style='border-collapse: collapse;'>";
        echo "<tr><th>ID</th><th>Year</th><th>Semester</th><th>Active</th></tr>";
        while ($row = $all_academic->fetch(PDO::FETCH_ASSOC)) {
            echo "<tr><td>{$row['academic_year_id']}</td><td>{$row['year']}</td><td>{$row['semester']}</td><td>{$row['is_active']}</td></tr>";
        }
        echo "</table>";
    }
    
    // === 3. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡πÅ‡∏ñ‡∏ß‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ===
    echo "<h3>üìä 3. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡πÅ‡∏ñ‡∏ß‡∏Ç‡∏≠‡∏á‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô</h3>";
    $attendance_query = "
        SELECT date, attendance_status, academic_year_id, check_method, remarks, created_at 
        FROM attendance 
        WHERE student_id = ? 
        ORDER BY date DESC 
        LIMIT 20
    ";
    $attendance_stmt = $conn->prepare($attendance_query);
    $attendance_stmt->execute([$test_student_id]);
    $attendance_data = $attendance_stmt->fetchAll(PDO::FETCH_ASSOC);
    
    if (count($attendance_data) > 0) {
        echo "<table border='1' style='border-collapse: collapse; width: 100%; font-size: 12px;'>";
        echo "<tr><th>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà</th><th>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞</th><th>Academic Year</th><th>‡∏ß‡∏¥‡∏ò‡∏µ‡πÄ‡∏ä‡πá‡∏Ñ</th><th>‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏</th><th>‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠</th></tr>";
        
        $absent_count = 0;
        $present_count = 0;
        
        foreach ($attendance_data as $record) {
            $status = $record['attendance_status'];
            $color = $status === 'absent' ? 'red' : ($status === 'present' ? 'green' : 'orange');
            
            echo "<tr>";
            echo "<td>{$record['date']}</td>";
            echo "<td style='color: $color;'><strong>$status</strong></td>";
            echo "<td>{$record['academic_year_id']}</td>";
            echo "<td>{$record['check_method']}</td>";
            echo "<td>{$record['remarks']}</td>";
            echo "<td>{$record['created_at']}</td>";
            echo "</tr>";
            
            if ($status === 'absent') $absent_count++;
            if ($status === 'present') $present_count++;
        }
        echo "</table>";
        
        echo "<p><strong>‡∏™‡∏£‡∏∏‡∏õ (‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î 20 ‡∏ß‡∏±‡∏ô):</strong> Absent = $absent_count, Present = $present_count</p>";
    } else {
        echo "<p>‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡πÅ‡∏ñ‡∏ß‡∏Ç‡∏≠‡∏á‡∏ô‡∏±‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏ô ID: $test_student_id</p>";
    }
    
    // === 4. ‡∏ô‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏≤‡∏° academic year ===
    echo "<h3>üìà 4. ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡πÅ‡∏ñ‡∏ß‡∏ï‡∏≤‡∏° Academic Year</h3>";
    $stats_query = "
        SELECT 
            academic_year_id,
            attendance_status, 
            COUNT(*) as count
        FROM attendance 
        WHERE student_id = ? 
        GROUP BY academic_year_id, attendance_status 
        ORDER BY academic_year_id, attendance_status
    ";
    $stats_stmt = $conn->prepare($stats_query);
    $stats_stmt->execute([$test_student_id]);
    $stats = $stats_stmt->fetchAll(PDO::FETCH_ASSOC);
    
    if (count($stats) > 0) {
        echo "<table border='1' style='border-collapse: collapse;'>";
        echo "<tr><th>Academic Year ID</th><th>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞</th><th>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô</th></tr>";
        foreach ($stats as $stat) {
            $color = $stat['attendance_status'] === 'absent' ? 'red' : ($stat['attendance_status'] === 'present' ? 'green' : 'orange');
            echo "<tr>";
            echo "<td><strong>{$stat['academic_year_id']}</strong></td>";
            echo "<td style='color: $color;'><strong>{$stat['attendance_status']}</strong></td>";
            echo "<td><strong>{$stat['count']}</strong></td>";
            echo "</tr>";
        }
        echo "</table>";
    } else {
        echo "<p>‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡πÅ‡∏ñ‡∏ß</p>";
    }
    
    // === 5. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏´‡∏≤ absent days ===
    echo "<h3>üîç 5. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏´‡∏≤‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏Ç‡∏≤‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏ô</h3>";
    
    // ‡∏ô‡∏±‡∏ö‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏Ç‡∏≤‡∏î
    $count_absent_query = "
        SELECT COUNT(*) as total_absent_days
        FROM attendance 
        WHERE student_id = ? 
          AND academic_year_id = ? 
          AND attendance_status = 'absent'
    ";
    $count_stmt = $conn->prepare($count_absent_query);
    $count_stmt->execute([$test_student_id, $test_academic_year_id]);
    $count_result = $count_stmt->fetch(PDO::FETCH_ASSOC);
    $total_absent = $count_result['total_absent_days'];
    
    echo "<p><strong>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏Ç‡∏≤‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î (Academic Year $test_academic_year_id):</strong> $total_absent ‡∏ß‡∏±‡∏ô</p>";
    
    if ($total_absent > 0) {
        // ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏Ç‡∏≤‡∏î
        $absent_list_query = "
            SELECT date, remarks, created_at
            FROM attendance 
            WHERE student_id = ? 
              AND academic_year_id = ? 
              AND attendance_status = 'absent'
            ORDER BY date DESC
            LIMIT 10
        ";
        $absent_stmt = $conn->prepare($absent_list_query);
        $absent_stmt->execute([$test_student_id, $test_academic_year_id]);
        $absent_list = $absent_stmt->fetchAll(PDO::FETCH_ASSOC);
        
        echo "<p><strong>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏Ç‡∏≤‡∏î (10 ‡∏ß‡∏±‡∏ô‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î):</strong></p>";
        echo "<table border='1' style='border-collapse: collapse;'>";
        echo "<tr><th>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà</th><th>‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏</th><th>‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠</th></tr>";
        foreach ($absent_list as $absent) {
            echo "<tr>";
            echo "<td><strong>{$absent['date']}</strong></td>";
            echo "<td>{$absent['remarks']}</td>";
            echo "<td>{$absent['created_at']}</td>";
            echo "</tr>";
        }
        echo "</table>";
        
        // === 6. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö UPDATE ‡∏à‡∏£‡∏¥‡∏á ===
        echo "<h3>üõ†Ô∏è 6. ‡∏ó‡∏î‡∏™‡∏≠‡∏ö UPDATE ‡πÅ‡∏ñ‡∏ß‡πÅ‡∏£‡∏Å</h3>";
        $test_date = $absent_list[0]['date'];
        
        echo "<p><strong>‡∏à‡∏∞‡∏ó‡∏î‡∏™‡∏≠‡∏ö UPDATE ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà:</strong> $test_date</p>";
        
        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡πà‡∏≠‡∏ô UPDATE
        $before_query = "SELECT attendance_status, academic_year_id FROM attendance WHERE student_id = ? AND date = ?";
        $before_stmt = $conn->prepare($before_query);
        $before_stmt->execute([$test_student_id, $test_date]);
        $before = $before_stmt->fetch(PDO::FETCH_ASSOC);
        
        if ($before) {
            echo "<p><strong>‡∏Å‡πà‡∏≠‡∏ô UPDATE:</strong> Status = {$before['attendance_status']}, Academic Year = {$before['academic_year_id']}</p>";
            
            // ‡∏ó‡∏≥ UPDATE (‡πÉ‡∏ô transaction ‡πÄ‡∏û‡∏∑‡πà‡∏≠ rollback)
            $conn->beginTransaction();
            
            $update_query = "
                UPDATE attendance 
                SET attendance_status = 'present', 
                    check_method = 'Manual Test', 
                    remarks = '‡∏ó‡∏î‡∏™‡∏≠‡∏ö UPDATE',
                    updated_at = NOW()
                WHERE student_id = ? AND academic_year_id = ? AND date = ? AND attendance_status = 'absent'
            ";
            
            $update_stmt = $conn->prepare($update_query);
            $result = $update_stmt->execute([$test_student_id, $test_academic_year_id, $test_date]);
            $rows_affected = $update_stmt->rowCount();
            
            echo "<p><strong>UPDATE Result:</strong> Success = " . ($result ? 'true' : 'false') . ", Rows Affected = $rows_affected</p>";
            
            if ($result && $rows_affected > 0) {
                echo "<p style='color: green;'><strong>‚úÖ UPDATE ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!</strong></p>";
                
                // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏´‡∏•‡∏±‡∏á UPDATE
                $after_stmt = $conn->prepare($before_query);
                $after_stmt->execute([$test_student_id, $test_date]);
                $after = $after_stmt->fetch(PDO::FETCH_ASSOC);
                
                echo "<p><strong>‡∏´‡∏•‡∏±‡∏á UPDATE:</strong> Status = {$after['attendance_status']}, Academic Year = {$after['academic_year_id']}</p>";
            } else {
                echo "<p style='color: red;'><strong>‚ùå UPDATE ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß!</strong></p>";
                echo "<p><strong>‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏õ‡πÑ‡∏î‡πâ:</strong></p>";
                echo "<ul>";
                echo "<li>Academic Year ID ‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô (‡πÉ‡∏ä‡πâ $test_academic_year_id ‡πÅ‡∏ï‡πà‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏õ‡πá‡∏ô {$before['academic_year_id']})</li>";
                echo "<li>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà 'absent' (‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô: {$before['attendance_status']})</li>";
                echo "<li>WHERE condition ‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô</li>";
                echo "</ul>";
                
                // ‡∏•‡∏≠‡∏á UPDATE ‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡πÄ‡∏ä‡πá‡∏Ñ academic_year_id
                echo "<h4>üîÑ ‡∏•‡∏≠‡∏á UPDATE ‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡πÄ‡∏ä‡πá‡∏Ñ academic_year_id</h4>";
                $update_simple = "
                    UPDATE attendance 
                    SET attendance_status = 'present', 
                        check_method = 'Manual Test Simple', 
                        remarks = '‡∏ó‡∏î‡∏™‡∏≠‡∏ö UPDATE ‡πÅ‡∏ö‡∏ö‡∏á‡πà‡∏≤‡∏¢',
                        updated_at = NOW()
                    WHERE student_id = ? AND date = ? AND attendance_status = 'absent'
                ";
                
                $simple_stmt = $conn->prepare($update_simple);
                $simple_result = $simple_stmt->execute([$test_student_id, $test_date]);
                $simple_rows = $simple_stmt->rowCount();
                
                echo "<p><strong>UPDATE Simple Result:</strong> Success = " . ($simple_result ? 'true' : 'false') . ", Rows Affected = $simple_rows</p>";
                
                if ($simple_result && $simple_rows > 0) {
                    echo "<p style='color: green;'><strong>‚úÖ UPDATE ‡πÅ‡∏ö‡∏ö‡∏á‡πà‡∏≤‡∏¢‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!</strong> ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏Ñ‡∏∑‡∏≠ academic_year_id ‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô</p>";
                } else {
                    echo "<p style='color: red;'><strong>‚ùå UPDATE ‡πÅ‡∏ö‡∏ö‡∏á‡πà‡∏≤‡∏¢‡∏Å‡πá‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß!</strong> ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà academic_year_id</p>";
                }
            }
            
            // Rollback ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏£‡∏¥‡∏á
            $conn->rollBack();
            echo "<p><em>‚ÑπÔ∏è ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏: ‡∏Å‡∏≤‡∏£ UPDATE ‡∏ñ‡∏π‡∏Å rollback ‡πÅ‡∏•‡πâ‡∏ß ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á</em></p>";
            
        } else {
            echo "<p>‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: $test_date</p>";
        }
        
    } else {
        echo "<p>‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏Ç‡∏≤‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÉ‡∏ô‡∏õ‡∏µ‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤ $test_academic_year_id</p>";
    }
    
    // === ‡∏™‡∏£‡∏∏‡∏õ‡πÅ‡∏•‡∏∞‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥ ===
    echo "<hr>";
    echo "<h3>üí° ‡∏™‡∏£‡∏∏‡∏õ‡πÅ‡∏•‡∏∞‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç</h3>";
    echo "<div style='background: #e3f2fd; padding: 15px; border-radius: 8px;'>";
    echo "<h4>üîç ‡∏à‡∏∏‡∏î‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö:</h4>";
    echo "<ol>";
    echo "<li><strong>Academic Year ID:</strong> ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á attendance ‡πÉ‡∏ä‡πâ academic_year_id ‡πÄ‡∏ó‡πà‡∏≤‡πÑ‡∏£</li>";
    echo "<li><strong>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:</strong> ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏°‡∏µ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ 'absent' ‡∏à‡∏£‡∏¥‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà</li>";
    echo "<li><strong>WHERE Condition:</strong> ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ WHERE condition ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô‡πÅ‡∏•‡∏∞‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á</li>";
    echo "<li><strong>‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏ú‡∏¥‡∏î:</strong> ‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏ú‡∏¥‡∏î‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</li>";
    echo "</ol>";
    
    echo "<h4>üõ†Ô∏è ‡∏ß‡∏¥‡∏ò‡∏µ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ó‡∏µ‡πà‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥:</h4>";
    echo "<ul>";
    echo "<li>‡πÉ‡∏ä‡πâ academic_year_id ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏≤‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏£‡∏¥‡∏á</li>";
    echo "<li>‡πÄ‡∏û‡∏¥‡πà‡∏° debug log ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÉ‡∏ô WHERE condition</li>";
    echo "<li>‡∏•‡∏≠‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏ä‡πá‡∏Ñ academic_year_id ‡∏ñ‡πâ‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ü‡∏¥‡∏•‡∏î‡πå‡∏ô‡∏µ‡πâ</li>";
    echo "<li>‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á</li>";
    echo "</ul>";
    echo "</div>";
    
} catch (Exception $e) {
    echo "<div style='background: #ffebee; color: #c62828; padding: 15px; border-radius: 5px;'>";
    echo "<h3>‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î</h3>";
    echo "<p>" . $e->getMessage() . "</p>";
    echo "</div>";
}
?>

<style>
    body { 
        font-family: 'Sarabun', Arial, sans-serif; 
        margin: 20px; 
        background: #f5f5f5; 
        color: #333;
    }
    h2, h3, h4 { color: #2196f3; }
    table { margin: 10px 0; background: white; }
    th { background: #2196f3; color: white; padding: 8px; }
    td { padding: 8px; border: 1px solid #ddd; }
    hr { margin: 20px 0; border: 1px solid #e0e0e0; }
</style>
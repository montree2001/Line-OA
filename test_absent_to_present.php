<?php
/**
 * test_absent_to_present.php - ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏à‡∏≤‡∏Å absent ‡πÄ‡∏õ‡πá‡∏ô present
 */

session_start();
$_SESSION['user_id'] = 1; // ‡∏à‡∏≥‡∏•‡∏≠‡∏á user_id ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö

require_once 'db_connect.php';

echo "<h2>üß™ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏à‡∏≤‡∏Å absent ‡πÄ‡∏õ‡πá‡∏ô present</h2>";
echo "<p><em>‡∏£‡∏∞‡∏ö‡∏ö‡πÉ‡∏´‡∏°‡πà: ‡∏´‡∏≤‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏Ç‡∏≤‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏ô (absent) ‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô present ‡∏ï‡∏≤‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£</em></p>";

try {
    $conn = getDB();
    $conn->beginTransaction();
    
    // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏î‡∏™‡∏≠‡∏ö
    $test_student_id = 888;
    $test_academic_year_id = 1;
    $days_to_adjust = 3; // ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏±‡∏ö 3 ‡∏ß‡∏±‡∏ô
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏î‡∏™‡∏≠‡∏ö (7 ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ú‡πà‡∏≤‡∏ô‡∏°‡∏≤)
    $test_dates = [];
    for ($i = 7; $i >= 1; $i--) {
        $test_dates[] = date('Y-m-d', strtotime("-$i days"));
    }
    
    echo "<h3>üìã ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏î‡∏™‡∏≠‡∏ö</h3>";
    echo "<p><strong>Student ID:</strong> $test_student_id</p>";
    echo "<p><strong>Academic Year ID:</strong> $test_academic_year_id</p>";
    echo "<p><strong>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏±‡∏ö:</strong> $days_to_adjust ‡∏ß‡∏±‡∏ô</p>";
    echo "<p><strong>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏î‡∏™‡∏≠‡∏ö:</strong> " . implode(', ', $test_dates) . "</p>";
    
    // ‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡πà‡∏≤‡∏Å‡πà‡∏≠‡∏ô
    $cleanup_query = "DELETE FROM attendance WHERE student_id = ? AND academic_year_id = ?";
    $cleanup_stmt = $conn->prepare($cleanup_query);
    $cleanup_stmt->execute([$test_student_id, $test_academic_year_id]);
    
    $cleanup_records_query = "DELETE FROM attendance_records WHERE student_id = ?";
    $cleanup_records_stmt = $conn->prepare($cleanup_records_query);
    $cleanup_records_stmt->execute([$test_student_id]);
    
    echo "<p>üßπ ‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡πà‡∏≤‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß</p>";
    
    // === ‡∏Ç‡∏±‡πâ‡∏ô‡∏ó‡∏µ‡πà 1: ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏î‡∏™‡∏≠‡∏ö ===
    echo "<h3>üîß ‡∏Ç‡∏±‡πâ‡∏ô‡∏ó‡∏µ‡πà 1: ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏î‡∏™‡∏≠‡∏ö</h3>";
    
    $statuses = ['absent', 'absent', 'absent', 'absent', 'present', 'absent', 'late'];
    
    foreach ($test_dates as $index => $date) {
        $status = $statuses[$index];
        
        $prep_query = "INSERT INTO attendance (student_id, academic_year_id, date, attendance_status, check_method, check_time, remarks, created_at) VALUES (?, ?, ?, ?, 'System', '08:00:00', '‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏ó‡∏î‡∏™‡∏≠‡∏ö', NOW())";
        $prep_stmt = $conn->prepare($prep_query);
        $prep_stmt->execute([$test_student_id, $test_academic_year_id, $date, $status]);
        
        echo "<p>‚úÖ ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•: $date = <strong>$status</strong></p>";
    }
    
    // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡πà‡∏≠‡∏ô‡∏õ‡∏£‡∏±‡∏ö
    echo "<h4>üìä ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡πà‡∏≠‡∏ô‡∏õ‡∏£‡∏±‡∏ö</h4>";
    $before_query = "SELECT date, attendance_status FROM attendance WHERE student_id = ? AND academic_year_id = ? ORDER BY date";
    $before_stmt = $conn->prepare($before_query);
    $before_stmt->execute([$test_student_id, $test_academic_year_id]);
    $before_data = $before_stmt->fetchAll(PDO::FETCH_ASSOC);
    
    echo "<table border='1' style='border-collapse: collapse;'>";
    echo "<tr><th>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà</th><th>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞</th></tr>";
    $absent_count = 0;
    foreach ($before_data as $row) {
        $color = $row['attendance_status'] === 'absent' ? 'red' : ($row['attendance_status'] === 'present' ? 'green' : 'orange');
        echo "<tr><td>{$row['date']}</td><td style='color: $color;'><strong>{$row['attendance_status']}</strong></td></tr>";
        if ($row['attendance_status'] === 'absent') {
            $absent_count++;
        }
    }
    echo "</table>";
    echo "<p><strong>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏Ç‡∏≤‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏ô (absent):</strong> $absent_count ‡∏ß‡∏±‡∏ô</p>";
    
    // === ‡∏Ç‡∏±‡πâ‡∏ô‡∏ó‡∏µ‡πà 2: ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏´‡∏≤‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏Ç‡∏≤‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏ô ===
    echo "<h3>üîç ‡∏Ç‡∏±‡πâ‡∏ô‡∏ó‡∏µ‡πà 2: ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏´‡∏≤‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏Ç‡∏≤‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏ô</h3>";
    
    $absent_days_query = "
        SELECT date 
        FROM attendance 
        WHERE student_id = ? 
          AND academic_year_id = ? 
          AND attendance_status = 'absent'
        ORDER BY date DESC
        LIMIT ?
    ";
    
    $absent_stmt = $conn->prepare($absent_days_query);
    $absent_stmt->execute([$test_student_id, $test_academic_year_id, $days_to_adjust * 2]);
    $absent_days = $absent_stmt->fetchAll(PDO::FETCH_COLUMN);
    
    echo "<p><strong>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏û‡∏ö‡∏ß‡πà‡∏≤‡∏Ç‡∏≤‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏ô:</strong> " . implode(', ', $absent_days) . "</p>";
    echo "<p><strong>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏û‡∏ö:</strong> " . count($absent_days) . " ‡∏ß‡∏±‡∏ô</p>";
    
    if (count($absent_days) >= $days_to_adjust) {
        echo "<p>‚úÖ <strong>‡∏û‡∏≠‡πÄ‡∏û‡∏µ‡∏¢‡∏á</strong> - ‡∏°‡∏µ‡∏ß‡∏±‡∏ô‡∏Ç‡∏≤‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÉ‡∏´‡πâ‡∏ô‡∏≥‡∏°‡∏≤‡∏õ‡∏£‡∏±‡∏ö</p>";
    } else {
        echo "<p>‚ö†Ô∏è <strong>‡πÑ‡∏°‡πà‡∏û‡∏≠‡πÄ‡∏û‡∏µ‡∏¢‡∏á</strong> - ‡∏ß‡∏±‡∏ô‡∏Ç‡∏≤‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ô‡πâ‡∏≠‡∏¢‡∏Å‡∏ß‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏±‡∏ö</p>";
    }
    
    // ‡πÄ‡∏≠‡∏≤‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
    $days_to_update = array_slice($absent_days, 0, $days_to_adjust);
    echo "<p><strong>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏ô‡∏≥‡∏°‡∏≤‡∏õ‡∏£‡∏±‡∏ö:</strong> " . implode(', ', $days_to_update) . "</p>";
    
    // === ‡∏Ç‡∏±‡πâ‡∏ô‡∏ó‡∏µ‡πà 3: ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£ UPDATE ===
    echo "<h3>üîÑ ‡∏Ç‡∏±‡πâ‡∏ô‡∏ó‡∏µ‡πà 3: ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£ UPDATE ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞</h3>";
    
    $actual_updated = 0;
    foreach ($days_to_update as $date) {
        echo "<hr>";
        echo "<h4>üìÖ ‡∏õ‡∏£‡∏±‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: $date</h4>";
        
        try {
            $update_attendance = "
                UPDATE attendance 
                SET attendance_status = 'present', 
                    check_method = 'Manual Adjustment', 
                    check_time = '08:00:00', 
                    remarks = '‡∏ó‡∏î‡∏™‡∏≠‡∏ö: ‡∏õ‡∏£‡∏±‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏à‡∏≤‡∏Å absent ‡πÄ‡∏õ‡πá‡∏ô present',
                    updated_at = NOW()
                WHERE student_id = ? AND academic_year_id = ? AND date = ? AND attendance_status = 'absent'
            ";
            
            $stmt = $conn->prepare($update_attendance);
            $result = $stmt->execute([$test_student_id, $test_academic_year_id, $date]);
            
            if ($result && $stmt->rowCount() > 0) {
                $actual_updated++;
                echo "<p>‚úÖ <strong>‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!</strong> ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï 1 ‡πÅ‡∏ñ‡∏ß (‡∏£‡∏ß‡∏°: $actual_updated)</p>";
                
                // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö attendance_records ‡∏î‡πâ‡∏ß‡∏¢
                try {
                    $update_records = "UPDATE attendance_records SET status = 'present', updated_at = NOW() WHERE student_id = ? AND attendance_date = ?";
                    $stmt2 = $conn->prepare($update_records);
                    $stmt2->execute([$test_student_id, $date]);
                    
                    if ($stmt2->rowCount() > 0) {
                        echo "<p>‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï attendance_records ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à</p>";
                    } else {
                        // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏´‡πâ INSERT
                        $insert_records = "INSERT INTO attendance_records (student_id, attendance_date, status, created_at) VALUES (?, ?, 'present', NOW())";
                        $stmt3 = $conn->prepare($insert_records);
                        $stmt3->execute([$test_student_id, $date]);
                        echo "<p>‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° attendance_records ‡πÉ‡∏´‡∏°‡πà</p>";
                    }
                } catch (Exception $e) {
                    echo "<p>‚ö†Ô∏è Warning attendance_records: " . $e->getMessage() . "</p>";
                }
                
            } else {
                echo "<p>‚ùå <strong>‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß</strong> - ‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÅ‡∏ñ‡∏ß‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï</p>";
                echo "<p>‡∏≠‡∏≤‡∏à‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏û‡∏£‡∏≤‡∏∞: ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πâ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà absent ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</p>";
            }
            
            // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
            $verify_query = "SELECT attendance_status, remarks FROM attendance WHERE student_id = ? AND academic_year_id = ? AND date = ?";
            $verify_stmt = $conn->prepare($verify_query);
            $verify_stmt->execute([$test_student_id, $test_academic_year_id, $date]);
            $verify_result = $verify_stmt->fetch(PDO::FETCH_ASSOC);
            
            if ($verify_result) {
                $status_color = $verify_result['attendance_status'] === 'present' ? 'green' : 'red';
                echo "<p><strong>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô:</strong> <span style='color: $status_color;'>{$verify_result['attendance_status']}</span></p>";
                echo "<p><strong>‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏:</strong> {$verify_result['remarks']}</p>";
            }
            
        } catch (Exception $e) {
            echo "<p>‚ùå <strong>‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:</strong> " . $e->getMessage() . "</p>";
        }
    }
    
    // === ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏• ===
    echo "<hr>";
    echo "<h3>üìä ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö</h3>";
    
    $after_query = "SELECT date, attendance_status, remarks FROM attendance WHERE student_id = ? AND academic_year_id = ? ORDER BY date";
    $after_stmt = $conn->prepare($after_query);
    $after_stmt->execute([$test_student_id, $test_academic_year_id]);
    $after_data = $after_stmt->fetchAll(PDO::FETCH_ASSOC);
    
    echo "<table border='1' style='border-collapse: collapse; width: 100%;'>";
    echo "<tr><th>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà</th><th>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏´‡∏•‡∏±‡∏á‡∏õ‡∏£‡∏±‡∏ö</th><th>‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏</th><th>‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå</th></tr>";
    
    $new_absent_count = 0;
    $new_present_count = 0;
    
    foreach ($after_data as $row) {
        $status = $row['attendance_status'];
        $remarks = $row['remarks'];
        $date = $row['date'];
        
        $status_color = $status === 'present' ? 'green' : ($status === 'absent' ? 'red' : 'orange');
        $was_updated = in_array($date, $days_to_update);
        $result_icon = $was_updated && $status === 'present' ? '‚úÖ ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à' : ($was_updated && $status !== 'present' ? '‚ùå ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß' : '‚ûñ ‡πÑ‡∏°‡πà‡∏õ‡∏£‡∏±‡∏ö');
        
        echo "<tr>";
        echo "<td>$date</td>";
        echo "<td style='color: $status_color;'><strong>$status</strong></td>";
        echo "<td style='font-size: 11px;'>$remarks</td>";
        echo "<td>$result_icon</td>";
        echo "</tr>";
        
        if ($status === 'absent') $new_absent_count++;
        if ($status === 'present') $new_present_count++;
    }
    echo "</table>";
    
    echo "<div style='background: #e8f5e8; padding: 15px; border-radius: 8px; margin-top: 20px;'>";
    echo "<h4>üìà ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥</h4>";
    echo "<p><strong>‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏±‡∏ö:</strong> $days_to_adjust ‡∏ß‡∏±‡∏ô</p>";
    echo "<p><strong>‡∏õ‡∏£‡∏±‡∏ö‡πÑ‡∏î‡πâ‡∏à‡∏£‡∏¥‡∏á:</strong> $actual_updated ‡∏ß‡∏±‡∏ô</p>";
    echo "<p><strong>‡∏Ç‡∏≤‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠:</strong> $new_absent_count ‡∏ß‡∏±‡∏ô</p>";
    echo "<p><strong>‡∏°‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏ß‡∏°:</strong> $new_present_count ‡∏ß‡∏±‡∏ô</p>";
    
    if ($actual_updated == $days_to_adjust) {
        echo "<p style='color: green; font-size: 16px;'><strong>üéØ ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à 100%!</strong></p>";
    } elseif ($actual_updated > 0) {
        echo "<p style='color: orange; font-size: 16px;'><strong>‚ö†Ô∏è ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡∏ö‡∏≤‡∏á‡∏™‡πà‡∏ß‡∏ô</strong></p>";
    } else {
        echo "<p style='color: red; font-size: 16px;'><strong>‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à</strong></p>";
    }
    echo "</div>";
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö attendance_records
    echo "<h4>üìã ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö attendance_records</h4>";
    $records_query = "SELECT attendance_date, status FROM attendance_records WHERE student_id = ? ORDER BY attendance_date";
    $records_stmt = $conn->prepare($records_query);
    $records_stmt->execute([$test_student_id]);
    $records_results = $records_stmt->fetchAll(PDO::FETCH_ASSOC);
    
    if (count($records_results) > 0) {
        echo "<table border='1' style='border-collapse: collapse;'>";
        echo "<tr><th>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà</th><th>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞</th></tr>";
        foreach ($records_results as $record) {
            $record_color = $record['status'] === 'present' ? 'green' : 'red';
            echo "<tr><td>{$record['attendance_date']}</td><td style='color: $record_color;'><strong>{$record['status']}</strong></td></tr>";
        }
        echo "</table>";
    } else {
        echo "<p>‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô attendance_records</p>";
    }
    
    // Rollback
    $conn->rollBack();
    echo "<p><em>‚ÑπÔ∏è ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏: ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ñ‡∏π‡∏Å rollback ‡πÅ‡∏•‡πâ‡∏ß (‡πÑ‡∏°‡πà‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏£‡∏¥‡∏á)</em></p>";
    
} catch (Exception $e) {
    if (isset($conn)) {
        $conn->rollBack();
    }
    echo "<div style='background: #ffebee; color: #c62828; padding: 15px; border-radius: 5px;'>";
    echo "<h3>‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î</h3>";
    echo "<p>" . $e->getMessage() . "</p>";
    echo "</div>";
}
?>

<style>
    body { 
        font-family: 'Sarabun', Arial, sans-serif; 
        margin: 20px; 
        background: #f5f5f5; 
        color: #333;
    }
    h2, h3, h4 { color: #2196f3; }
    table { margin: 10px 0; background: white; }
    th { background: #2196f3; color: white; padding: 8px; }
    td { padding: 8px; border: 1px solid #ddd; }
    hr { margin: 20px 0; border: 1px solid #e0e0e0; }
</style>
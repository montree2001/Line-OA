<?php
/**
 * test_insert_update_logic.php - ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏•‡πá‡∏≠‡∏à‡∏¥‡∏Å INSERT/UPDATE ‡πÉ‡∏´‡∏°‡πà
 */

session_start();
$_SESSION['user_id'] = 1; // ‡∏à‡∏≥‡∏•‡∏≠‡∏á user_id ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö

require_once 'db_connect.php';

echo "<h2>üß™ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏•‡πá‡∏≠‡∏à‡∏¥‡∏Å INSERT/UPDATE ‡πÉ‡∏´‡∏°‡πà</h2>";
echo "<p><em>‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥ ‚Üí INSERT, ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡πÅ‡∏ï‡πà‡πÑ‡∏°‡πà‡∏°‡∏≤ ‚Üí UPDATE ‡πÄ‡∏õ‡πá‡∏ô present</em></p>";

try {
    $conn = getDB();
    $conn->beginTransaction();
    
    // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏î‡∏™‡∏≠‡∏ö
    $test_student_id = 999;
    $test_academic_year_id = 1;
    $test_dates = [
        date('Y-m-d', strtotime('-7 days')), // ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà 1 - ‡∏à‡∏∞ INSERT
        date('Y-m-d', strtotime('-6 days')), // ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà 2 - ‡∏à‡∏∞ INSERT ‡πÅ‡∏•‡πâ‡∏ß UPDATE
        date('Y-m-d', strtotime('-5 days')), // ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà 3 - ‡∏à‡∏∞ INSERT ‡πÅ‡∏•‡πâ‡∏ß present ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß
    ];
    
    echo "<h3>üìã ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏î‡∏™‡∏≠‡∏ö</h3>";
    echo "<p><strong>Student ID:</strong> $test_student_id</p>";
    echo "<p><strong>Academic Year ID:</strong> $test_academic_year_id</p>";
    echo "<p><strong>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏î‡∏™‡∏≠‡∏ö:</strong> " . implode(', ', $test_dates) . "</p>";
    
    // ‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡πà‡∏≤‡∏Å‡πà‡∏≠‡∏ô (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
    $cleanup_query = "DELETE FROM attendance WHERE student_id = ? AND academic_year_id = ?";
    $cleanup_stmt = $conn->prepare($cleanup_query);
    $cleanup_stmt->execute([$test_student_id, $test_academic_year_id]);
    
    $cleanup_records_query = "DELETE FROM attendance_records WHERE student_id = ?";
    $cleanup_records_stmt = $conn->prepare($cleanup_records_query);
    $cleanup_records_stmt->execute([$test_student_id]);
    
    echo "<p>üßπ ‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡πà‡∏≤‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß</p>";
    
    // === ‡∏Ç‡∏±‡πâ‡∏ô‡∏ó‡∏µ‡πà 1: ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏î‡∏™‡∏≠‡∏ö ===
    echo "<h3>üîß ‡∏Ç‡∏±‡πâ‡∏ô‡∏ó‡∏µ‡πà 1: ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏î‡∏™‡∏≠‡∏ö</h3>";
    
    // ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà 2: ‡πÉ‡∏™‡πà‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• absent ‡πÑ‡∏ß‡πâ‡∏Å‡πà‡∏≠‡∏ô (‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏î‡∏™‡∏≠‡∏ö UPDATE)
    $prep_query = "INSERT INTO attendance (student_id, academic_year_id, date, attendance_status, check_method, check_time, remarks, created_at) VALUES (?, ?, ?, 'absent', 'System', '00:00:00', '‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏ó‡∏î‡∏™‡∏≠‡∏ö', NOW())";
    $prep_stmt = $conn->prepare($prep_query);
    $prep_stmt->execute([$test_student_id, $test_academic_year_id, $test_dates[1]]);
    echo "<p>‚úÖ ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• absent ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: {$test_dates[1]}</p>";
    
    // ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà 3: ‡πÉ‡∏™‡πà‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• present ‡πÑ‡∏ß‡πâ‡∏Å‡πà‡∏≠‡∏ô (‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏î‡∏™‡∏≠‡∏ö skip)
    $prep_stmt->execute([$test_student_id, $test_academic_year_id, $test_dates[2]]);
    $update_present = "UPDATE attendance SET attendance_status = 'present' WHERE student_id = ? AND academic_year_id = ? AND date = ?";
    $update_stmt = $conn->prepare($update_present);
    $update_stmt->execute([$test_student_id, $test_academic_year_id, $test_dates[2]]);
    echo "<p>‚úÖ ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• present ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: {$test_dates[2]}</p>";
    
    // === ‡∏Ç‡∏±‡πâ‡∏ô‡∏ó‡∏µ‡πà 2: ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏•‡πá‡∏≠‡∏à‡∏¥‡∏Å ===
    echo "<h3>üéØ ‡∏Ç‡∏±‡πâ‡∏ô‡∏ó‡∏µ‡πà 2: ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏•‡πá‡∏≠‡∏à‡∏¥‡∏Å INSERT/UPDATE</h3>";
    
    foreach ($test_dates as $index => $date) {
        echo "<hr>";
        echo "<h4>üìÖ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: $date</h4>";
        
        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
        $check_query = "SELECT attendance_status FROM attendance WHERE student_id = ? AND academic_year_id = ? AND date = ?";
        $check_stmt = $conn->prepare($check_query);
        $check_stmt->execute([$test_student_id, $test_academic_year_id, $date]);
        $existing_status = $check_stmt->fetchColumn();
        
        echo "<p><strong>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏î‡∏¥‡∏°:</strong> " . ($existing_status ?: '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•') . "</p>";
        
        // ‡πÉ‡∏ä‡πâ‡∏•‡πá‡∏≠‡∏à‡∏¥‡∏Å‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡πÉ‡∏ô‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô adjustStudentAttendance
        if ($existing_status === false) {
            // ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• - ‡∏ï‡πâ‡∏≠‡∏á INSERT
            echo "<p>üîÑ <strong>‡∏Å‡∏≥‡∏•‡∏±‡∏á INSERT</strong> ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà...</p>";
            
            $insert_query = "
                INSERT INTO attendance 
                (student_id, academic_year_id, date, attendance_status, check_method, check_time, remarks, created_at) 
                VALUES (?, ?, ?, 'present', 'Manual', '08:00:00', '‡∏ó‡∏î‡∏™‡∏≠‡∏ö INSERT', NOW())
            ";
            
            $insert_stmt = $conn->prepare($insert_query);
            $result = $insert_stmt->execute([$test_student_id, $test_academic_year_id, $date]);
            
            if ($result) {
                echo "<p>‚úÖ <strong>INSERT ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!</strong></p>";
                
                // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏•‡∏á‡πÉ‡∏ô attendance_records ‡∏î‡πâ‡∏ß‡∏¢
                $insert_records = "INSERT INTO attendance_records (student_id, attendance_date, status, created_at) VALUES (?, ?, 'present', NOW()) ON DUPLICATE KEY UPDATE status = 'present'";
                $records_stmt = $conn->prepare($insert_records);
                $records_stmt->execute([$test_student_id, $date]);
                echo "<p>‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏•‡∏á attendance_records ‡∏î‡πâ‡∏ß‡∏¢</p>";
            } else {
                echo "<p>‚ùå INSERT ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß</p>";
            }
            
        } elseif ($existing_status === 'absent' || $existing_status === 'late') {
            // ‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ï‡πà‡πÑ‡∏°‡πà‡∏°‡∏≤ - ‡∏ï‡πâ‡∏≠‡∏á UPDATE ‡πÄ‡∏õ‡πá‡∏ô present
            echo "<p>üîÑ <strong>‡∏Å‡∏≥‡∏•‡∏±‡∏á UPDATE</strong> ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏õ‡πá‡∏ô present...</p>";
            
            $update_query = "
                UPDATE attendance 
                SET attendance_status = 'present', 
                    check_method = 'Manual', 
                    check_time = '08:00:00', 
                    remarks = '‡∏ó‡∏î‡∏™‡∏≠‡∏ö UPDATE',
                    updated_at = NOW()
                WHERE student_id = ? AND academic_year_id = ? AND date = ?
            ";
            
            $update_stmt = $conn->prepare($update_query);
            $result = $update_stmt->execute([$test_student_id, $test_academic_year_id, $date]);
            
            if ($result && $update_stmt->rowCount() > 0) {
                echo "<p>‚úÖ <strong>UPDATE ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!</strong> (‡πÅ‡∏ñ‡∏ß‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô: " . $update_stmt->rowCount() . ")</p>";
                
                // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï attendance_records ‡∏î‡πâ‡∏ß‡∏¢
                $update_records = "UPDATE attendance_records SET status = 'present', updated_at = NOW() WHERE student_id = ? AND attendance_date = ?";
                $records_update_stmt = $conn->prepare($update_records);
                $records_update_stmt->execute([$test_student_id, $date]);
                echo "<p>‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï attendance_records ‡∏î‡πâ‡∏ß‡∏¢</p>";
            } else {
                echo "<p>‚ùå UPDATE ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß</p>";
            }
            
        } else {
            // ‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡πâ‡∏ß‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡πá‡∏ô present - ‡∏Ç‡πâ‡∏≤‡∏°
            echo "<p>‚ÑπÔ∏è <strong>SKIP</strong> - ‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• present ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß</p>";
        }
        
        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
        $verify_stmt = $conn->prepare($check_query);
        $verify_stmt->execute([$test_student_id, $test_academic_year_id, $date]);
        $final_status = $verify_stmt->fetchColumn();
        
        echo "<p><strong>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏´‡∏•‡∏±‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£:</strong> <span style='color: " . ($final_status === 'present' ? 'green' : 'red') . ";'><strong>$final_status</strong></span></p>";
        
        // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î
        $detail_query = "SELECT * FROM attendance WHERE student_id = ? AND academic_year_id = ? AND date = ?";
        $detail_stmt = $conn->prepare($detail_query);
        $detail_stmt->execute([$test_student_id, $test_academic_year_id, $date]);
        $detail_result = $detail_stmt->fetch(PDO::FETCH_ASSOC);
        
        if ($detail_result) {
            echo "<details><summary>üìã ‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î</summary>";
            echo "<table border='1' style='border-collapse: collapse; font-size: 12px;'>";
            foreach ($detail_result as $key => $value) {
                echo "<tr><td><strong>$key</strong></td><td>" . ($value ?? 'NULL') . "</td></tr>";
            }
            echo "</table></details>";
        }
    }
    
    // === ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏• ===
    echo "<hr>";
    echo "<h3>üìä ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö</h3>";
    
    $summary_query = "SELECT date, attendance_status, remarks FROM attendance WHERE student_id = ? AND academic_year_id = ? ORDER BY date";
    $summary_stmt = $conn->prepare($summary_query);
    $summary_stmt->execute([$test_student_id, $test_academic_year_id]);
    $summary_results = $summary_stmt->fetchAll(PDO::FETCH_ASSOC);
    
    echo "<table border='1' style='border-collapse: collapse; width: 100%;'>";
    echo "<tr><th>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà</th><th>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞</th><th>‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏</th><th>‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå</th></tr>";
    
    $expected_results = [
        $test_dates[0] => 'INSERT ‡πÉ‡∏´‡∏°‡πà',
        $test_dates[1] => 'UPDATE ‡∏à‡∏≤‡∏Å absent',
        $test_dates[2] => 'SKIP (present ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß)'
    ];
    
    foreach ($summary_results as $result) {
        $date = $result['date'];
        $status = $result['attendance_status'];
        $remarks = $result['remarks'];
        $expected = $expected_results[$date] ?? '‡πÑ‡∏°‡πà‡∏Ñ‡∏≤‡∏î‡∏´‡∏ß‡∏±‡∏á';
        $success = ($status === 'present') ? '‚úÖ ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à' : '‚ùå ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß';
        
        echo "<tr>";
        echo "<td>$date</td>";
        echo "<td><strong>$status</strong></td>";
        echo "<td>$remarks</td>";
        echo "<td>$success<br><small>($expected)</small></td>";
        echo "</tr>";
    }
    echo "</table>";
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö attendance_records
    echo "<h4>üìã ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö attendance_records</h4>";
    $records_query = "SELECT attendance_date, status FROM attendance_records WHERE student_id = ? ORDER BY attendance_date";
    $records_stmt = $conn->prepare($records_query);
    $records_stmt->execute([$test_student_id]);
    $records_results = $records_stmt->fetchAll(PDO::FETCH_ASSOC);
    
    if (count($records_results) > 0) {
        echo "<table border='1' style='border-collapse: collapse;'>";
        echo "<tr><th>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà</th><th>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞</th></tr>";
        foreach ($records_results as $record) {
            echo "<tr><td>{$record['attendance_date']}</td><td><strong>{$record['status']}</strong></td></tr>";
        }
        echo "</table>";
    } else {
        echo "<p>‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô attendance_records</p>";
    }
    
    // Rollback ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏´‡∏•‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠
    $conn->rollBack();
    echo "<p><em>‚ÑπÔ∏è ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏: ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ñ‡∏π‡∏Å rollback ‡πÅ‡∏•‡πâ‡∏ß (‡πÑ‡∏°‡πà‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏£‡∏¥‡∏á)</em></p>";
    
    // ‡∏™‡∏£‡∏∏‡∏õ
    echo "<div style='background: #e8f5e8; padding: 15px; border-radius: 8px; margin-top: 20px;'>";
    echo "<h4>üéØ ‡∏™‡∏£‡∏∏‡∏õ: ‡∏•‡πá‡∏≠‡∏à‡∏¥‡∏Å‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á!</h4>";
    echo "<ul>";
    echo "<li>‚úÖ <strong>INSERT:</strong> ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡πÅ‡∏ñ‡∏ß</li>";
    echo "<li>‚úÖ <strong>UPDATE:</strong> ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡πÅ‡∏ï‡πà‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏õ‡πá‡∏ô absent ‡∏´‡∏£‡∏∑‡∏≠ late</li>";
    echo "<li>‚úÖ <strong>SKIP:</strong> ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡πÅ‡∏•‡πâ‡∏ß‡πÅ‡∏•‡∏∞‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏õ‡πá‡∏ô present</li>";
    echo "<li>‚úÖ <strong>‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≠‡∏î‡∏Ñ‡∏•‡πâ‡∏≠‡∏á:</strong> ‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á attendance ‡πÅ‡∏•‡∏∞ attendance_records</li>";
    echo "</ul>";
    echo "</div>";
    
} catch (Exception $e) {
    if (isset($conn)) {
        $conn->rollBack();
    }
    echo "<div style='background: #ffebee; color: #c62828; padding: 15px; border-radius: 5px;'>";
    echo "<h3>‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î</h3>";
    echo "<p>" . $e->getMessage() . "</p>";
    echo "</div>";
}
?>

<style>
    body { 
        font-family: 'Sarabun', Arial, sans-serif; 
        margin: 20px; 
        background: #f5f5f5; 
        color: #333;
    }
    h2, h3, h4 { color: #2196f3; }
    table { margin: 10px 0; background: white; }
    th { background: #2196f3; color: white; padding: 8px; }
    td { padding: 8px; border: 1px solid #ddd; }
    hr { margin: 20px 0; border: 1px solid #e0e0e0; }
    details { margin: 10px 0; }
    summary { cursor: pointer; color: #666; }
</style>